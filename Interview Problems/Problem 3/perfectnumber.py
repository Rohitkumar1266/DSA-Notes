# -*- coding: utf-8 -*-
"""PerfectNumber.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oR6E2JIU7aK2Ck7pGX0jJhPH-wqH9Z2u

Problem 3 

Given a positive integer num, write a function which returns the value of Perfect square of that num if num is a perfect square else -1.

Follow up: Do not use any built-in library function such as sqrt.

Example 1:

Input: num = 16

Output: 4

Example 2:

Input: num = 14

Output: -1
"""

def isPerfect(N, start, end):  
  
    mid = int((start + end) / 2)

    # Base Condition
    if (start > end):
      return -1
      
    # Recursion
    if (mid * mid == N):
      return mid
  
    elif (mid * mid > N):
      return isPerfect(N, start, mid - 1)  

    else:
      return isPerfect(N, mid + 1, end) 
  
# Driver code  
N = int(input("Enter the number"))
print (isPerfect(N, 1, N))

