# -*- coding: utf-8 -*-
"""Maximum Product Subarray.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AkM8varNNDGtVH_8ds2FfQtQqbadI2-U
"""

class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        max_Product = nums[0]
        max_Product_endingIndex = nums[0]
        min_Product_endingIndex = nums[0]
        
        for i in range(1,len(nums)):   
            temp = max_Product_endingIndex
            max_Product_endingIndex = max(nums[i],nums[i]*max_Product_endingIndex,nums[i]*min_Product_endingIndex)
            min_Product_endingIndex = min(nums[i],nums[i]*temp,nums[i]*min_Product_endingIndex)
            max_Product = max(max_Product,max_Product_endingIndex)
            
        return max_Product